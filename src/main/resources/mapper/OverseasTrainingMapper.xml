<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nfsysu.renshi.dao.OverseasTrainingMapper">
  <resultMap id="BaseResultMap" type="cn.nfsysu.renshi.domain.OverseasTraining">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="is_has_experience" jdbcType="VARCHAR" property="isHasExperience" />
    <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="organization_name" jdbcType="VARCHAR" property="organizationName" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="organizational_unit" jdbcType="VARCHAR" property="organizationalUnit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, is_has_experience, begin_time, end_time, country, organization_name, project_name, 
    organizational_unit
  </sql>
  <select id="selectByExample" parameterType="cn.nfsysu.renshi.domain.OverseasTrainingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from overseas_training
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from overseas_training
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from overseas_training
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.nfsysu.renshi.domain.OverseasTrainingExample">
    delete from overseas_training
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.nfsysu.renshi.domain.OverseasTraining">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into overseas_training (is_has_experience, begin_time, end_time, 
      country, organization_name, project_name, 
      organizational_unit)
    values (#{isHasExperience,jdbcType=VARCHAR}, #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{organizationName,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR}, 
      #{organizationalUnit,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.nfsysu.renshi.domain.OverseasTraining">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into overseas_training
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="isHasExperience != null">
        is_has_experience,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="organizationName != null">
        organization_name,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="organizationalUnit != null">
        organizational_unit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="isHasExperience != null">
        #{isHasExperience,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="organizationName != null">
        #{organizationName,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="organizationalUnit != null">
        #{organizationalUnit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.nfsysu.renshi.domain.OverseasTrainingExample" resultType="java.lang.Long">
    select count(*) from overseas_training
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update overseas_training
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.isHasExperience != null">
        is_has_experience = #{record.isHasExperience,jdbcType=VARCHAR},
      </if>
      <if test="record.beginTime != null">
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationName != null">
        organization_name = #{record.organizationName,jdbcType=VARCHAR},
      </if>
      <if test="record.projectName != null">
        project_name = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationalUnit != null">
        organizational_unit = #{record.organizationalUnit,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update overseas_training
    set Id = #{record.id,jdbcType=INTEGER},
      is_has_experience = #{record.isHasExperience,jdbcType=VARCHAR},
      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      organization_name = #{record.organizationName,jdbcType=VARCHAR},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      organizational_unit = #{record.organizationalUnit,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.nfsysu.renshi.domain.OverseasTraining">
    update overseas_training
    <set>
      <if test="isHasExperience != null">
        is_has_experience = #{isHasExperience,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="organizationName != null">
        organization_name = #{organizationName,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="organizationalUnit != null">
        organizational_unit = #{organizationalUnit,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.nfsysu.renshi.domain.OverseasTraining">
    update overseas_training
    set is_has_experience = #{isHasExperience,jdbcType=VARCHAR},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      organization_name = #{organizationName,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR},
      organizational_unit = #{organizationalUnit,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>