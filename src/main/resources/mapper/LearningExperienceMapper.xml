<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nfsysu.renshi.dao.LearningExperienceMapper">
  <resultMap id="BaseResultMap" type="cn.nfsysu.renshi.domain.LearningExperience">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="father" jdbcType="INTEGER" property="father" />
    <result column="educational" jdbcType="VARCHAR" property="educational" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="university" jdbcType="VARCHAR" property="university" />
    <result column="majors" jdbcType="VARCHAR" property="majors" />
    <result column="begin_time" jdbcType="VARCHAR" property="beginTime" />
    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="degree_name" jdbcType="VARCHAR" property="degreeName" />
    <result column="degree_awarded_time" jdbcType="VARCHAR" property="degreeAwardedTime" />
    <result column="learning_style" jdbcType="VARCHAR" property="learningStyle" />
    <result column="school_classes" jdbcType="VARCHAR" property="schoolClasses" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, father, educational, country, university, majors, begin_time, end_time, degree, 
    degree_name, degree_awarded_time, learning_style, school_classes
  </sql>
  <select id="selectByExample" parameterType="cn.nfsysu.renshi.domain.LearningExperienceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from learning_experience
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from learning_experience
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from learning_experience
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.nfsysu.renshi.domain.LearningExperienceExample">
    delete from learning_experience
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.nfsysu.renshi.domain.LearningExperience">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into learning_experience (father, educational, country, 
      university, majors, begin_time, 
      end_time, degree, degree_name, 
      degree_awarded_time, learning_style, school_classes
      )
    values (#{father,jdbcType=INTEGER}, #{educational,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, 
      #{university,jdbcType=VARCHAR}, #{majors,jdbcType=VARCHAR}, #{beginTime,jdbcType=VARCHAR}, 
      #{endTime,jdbcType=VARCHAR}, #{degree,jdbcType=VARCHAR}, #{degreeName,jdbcType=VARCHAR}, 
      #{degreeAwardedTime,jdbcType=VARCHAR}, #{learningStyle,jdbcType=VARCHAR}, #{schoolClasses,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.nfsysu.renshi.domain.LearningExperience">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into learning_experience
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="father != null">
        father,
      </if>
      <if test="educational != null">
        educational,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="university != null">
        university,
      </if>
      <if test="majors != null">
        majors,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="degreeName != null">
        degree_name,
      </if>
      <if test="degreeAwardedTime != null">
        degree_awarded_time,
      </if>
      <if test="learningStyle != null">
        learning_style,
      </if>
      <if test="schoolClasses != null">
        school_classes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="father != null">
        #{father,jdbcType=INTEGER},
      </if>
      <if test="educational != null">
        #{educational,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="university != null">
        #{university,jdbcType=VARCHAR},
      </if>
      <if test="majors != null">
        #{majors,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="degreeName != null">
        #{degreeName,jdbcType=VARCHAR},
      </if>
      <if test="degreeAwardedTime != null">
        #{degreeAwardedTime,jdbcType=VARCHAR},
      </if>
      <if test="learningStyle != null">
        #{learningStyle,jdbcType=VARCHAR},
      </if>
      <if test="schoolClasses != null">
        #{schoolClasses,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.nfsysu.renshi.domain.LearningExperienceExample" resultType="java.lang.Long">
    select count(*) from learning_experience
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update learning_experience
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.father != null">
        father = #{record.father,jdbcType=INTEGER},
      </if>
      <if test="record.educational != null">
        educational = #{record.educational,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.university != null">
        university = #{record.university,jdbcType=VARCHAR},
      </if>
      <if test="record.majors != null">
        majors = #{record.majors,jdbcType=VARCHAR},
      </if>
      <if test="record.beginTime != null">
        begin_time = #{record.beginTime,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.degreeName != null">
        degree_name = #{record.degreeName,jdbcType=VARCHAR},
      </if>
      <if test="record.degreeAwardedTime != null">
        degree_awarded_time = #{record.degreeAwardedTime,jdbcType=VARCHAR},
      </if>
      <if test="record.learningStyle != null">
        learning_style = #{record.learningStyle,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolClasses != null">
        school_classes = #{record.schoolClasses,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update learning_experience
    set Id = #{record.id,jdbcType=INTEGER},
      father = #{record.father,jdbcType=INTEGER},
      educational = #{record.educational,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      university = #{record.university,jdbcType=VARCHAR},
      majors = #{record.majors,jdbcType=VARCHAR},
      begin_time = #{record.beginTime,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      degree_name = #{record.degreeName,jdbcType=VARCHAR},
      degree_awarded_time = #{record.degreeAwardedTime,jdbcType=VARCHAR},
      learning_style = #{record.learningStyle,jdbcType=VARCHAR},
      school_classes = #{record.schoolClasses,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.nfsysu.renshi.domain.LearningExperience">
    update learning_experience
    <set>
      <if test="father != null">
        father = #{father,jdbcType=INTEGER},
      </if>
      <if test="educational != null">
        educational = #{educational,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="university != null">
        university = #{university,jdbcType=VARCHAR},
      </if>
      <if test="majors != null">
        majors = #{majors,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        begin_time = #{beginTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="degreeName != null">
        degree_name = #{degreeName,jdbcType=VARCHAR},
      </if>
      <if test="degreeAwardedTime != null">
        degree_awarded_time = #{degreeAwardedTime,jdbcType=VARCHAR},
      </if>
      <if test="learningStyle != null">
        learning_style = #{learningStyle,jdbcType=VARCHAR},
      </if>
      <if test="schoolClasses != null">
        school_classes = #{schoolClasses,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.nfsysu.renshi.domain.LearningExperience">
    update learning_experience
    set father = #{father,jdbcType=INTEGER},
      educational = #{educational,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      university = #{university,jdbcType=VARCHAR},
      majors = #{majors,jdbcType=VARCHAR},
      begin_time = #{beginTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      degree_name = #{degreeName,jdbcType=VARCHAR},
      degree_awarded_time = #{degreeAwardedTime,jdbcType=VARCHAR},
      learning_style = #{learningStyle,jdbcType=VARCHAR},
      school_classes = #{schoolClasses,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>